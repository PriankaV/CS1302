import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score
from sklearn.tree import export_graphviz
import graphviz

# Load the data
DF = pd.read_csv('titles.csv')

# Select the features and target variable
FilteredDF = DF.dropna(axis=0, subset=('release_year', 'runtime', 'seasons', 'age_certification'), how='any')
X = FilteredDF[['release_year', 'runtime', 'seasons']]
y = FilteredDF['age_certification']
PossibleCerts = list(set(y.values))

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a decision tree classifier and train it on the training data
clf = DecisionTreeClassifier()
clf.fit(X_train, y_train)

# Make predictions on the testing data
y_pred = clf.predict(X_test)

# Evaluate the accuracy of the model
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy: {:.2f}%".format(accuracy * 100))

# Export the decision tree as a DOT file
dot_data = export_graphviz(clf, out_file=None, 
                           feature_names=['release_year', 'runtime', 'seasons'], 
                           class_names=PossibleCerts)
# Display the decision tree using Graphviz
graph = graphviz.Source(dot_data)
graph.view()
